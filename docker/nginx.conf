# Nginx configuration for VNC Desktop Load Balancing
# إعدادات Nginx لتوزيع الأحمال لسطح مكتب VNC

worker_processes auto;
worker_rlimit_nofile 65535;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # MIME Types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # Performance Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 20M;
    
    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=web:10m rate=30r/s;
    
    # Upstream servers for load balancing
    upstream vnc_backend {
        least_conn;
        server vnc-server:5000 max_fails=3 fail_timeout=30s;
        # Add more servers here for scaling:
        # server vnc-server-2:5000 max_fails=3 fail_timeout=30s;
        # server vnc-server-3:5000 max_fails=3 fail_timeout=30s;
        
        keepalive 32;
    }
    
    # WebSocket upstream
    upstream websocket_backend {
        server vnc-server:5000;
        # Add more servers for WebSocket load balancing
    }
    
    # Health check endpoint
    server {
        listen 80;
        server_name _;
        
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
    
    # Main server configuration
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        
        # Server name - change this to your domain
        server_name localhost vnc.example.com;
        
        # Security Headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data:; connect-src 'self' ws: wss:;" always;
        
        # API endpoints with rate limiting
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://vnc_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # API timeouts
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # WebSocket connections
        location /socket.io/ {
            proxy_pass http://websocket_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket timeouts
            proxy_read_timeout 86400s;
            proxy_send_timeout 86400s;
        }
        
        # Static files with caching
        location /static/ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            
            proxy_pass http://vnc_backend;
            proxy_set_header Host $host;
        }
        
        # Main web interface
        location / {
            limit_req zone=web burst=50 nodelay;
            
            proxy_pass http://vnc_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 10s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # Custom error pages
        error_page 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        # Security: Hide nginx version
        server_tokens off;
    }
    
    # HTTPS configuration (if SSL certificates are available)
    # server {
    #     listen 443 ssl http2;
    #     listen [::]:443 ssl http2;
    #     
    #     server_name vnc.example.com;
    #     
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     
    #     # SSL Configuration
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_session_timeout 10m;
    #     
    #     # HSTS
    #     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    #     
    #     # Rest of the configuration same as HTTP
    #     # ... (copy from above)
    # }
}

# Stream configuration for VNC port forwarding
stream {
    # VNC server load balancing
    upstream vnc_stream {
        least_conn;
        server vnc-server:5900 max_fails=3 fail_timeout=30s;
        # Add more VNC servers for load balancing
    }
    
    # VNC port forwarding
    server {
        listen 5900;
        proxy_pass vnc_stream;
        proxy_timeout 1s;
        proxy_responses 1;
        error_log /var/log/nginx/vnc_stream.log;
    }
}