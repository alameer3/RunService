#!/bin/bash

# ุณูุฑูุจุช ุจุฏุก ุชุดุบูู ุณุทุญ ุงูููุชุจ VNC
# ูุณุชุฎุฏู ูุจุฏุก ุณุทุญ ุงูููุชุจ ูุฏููุงู ุฃู ูู ุฎูุงู Replit

# ุงูุฃููุงู
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# ูุชุบูุฑุงุช ุงูุชูููู
VNC_PORT=5901
VNC_USER="vncuser"
DISPLAY_NUM=1
SCREEN_RESOLUTION="1024x768"
VNC_PASSWORD="vnc123456"

# ุฅูุดุงุก ูุฌูุฏ VNC ุฅุฐุง ูู ููู ููุฌูุฏุงู
setup_vnc_dirs() {
    mkdir -p ~/.vnc
    mkdir -p ~/Desktop
}

# ุฅูุดุงุก ููู ูููุฉ ูุฑูุฑ VNC
setup_vnc_password() {
    echo "$VNC_PASSWORD" | x11vnc -storepasswd ~/.vnc/passwd 2>/dev/null || {
        print_warning "ูุดู ูู ุฅุนุฏุงุฏ ูููุฉ ูุฑูุฑ VNCุ ุณูุชู ุงูุชุดุบูู ุจุฏูู ูููุฉ ูุฑูุฑ"
        return 1
    }
    print_success "ุชู ุฅุนุฏุงุฏ ูููุฉ ูุฑูุฑ VNC"
}

# ุจุฏุก ุฎุงุฏู ุงูุนุฑุถ ุงูุงูุชุฑุงุถู
start_xvfb() {
    print_status "ุจุฏุก ุชุดุบูู ุฎุงุฏู ุงูุนุฑุถ ุงูุงูุชุฑุงุถู..."
    
    # ุฅููุงู ุฃู ุนูููุงุช ุณุงุจูุฉ
    pkill -f "Xvfb :$DISPLAY_NUM" 2>/dev/null || true
    
    # ุจุฏุก Xvfb
    Xvfb :$DISPLAY_NUM -screen 0 ${SCREEN_RESOLUTION}x24 -ac +extension GLX +render -noreset &
    XVFB_PID=$!
    
    # ุงูุชุธุงุฑ ุจุฏุก ุงูุฎุงุฏู
    sleep 2
    
    if kill -0 $XVFB_PID 2>/dev/null; then
        print_success "ุชู ุจุฏุก ุฎุงุฏู ุงูุนุฑุถ ุงูุงูุชุฑุงุถู (PID: $XVFB_PID)"
        export DISPLAY=:$DISPLAY_NUM
        return 0
    else
        print_error "ูุดู ูู ุจุฏุก ุฎุงุฏู ุงูุนุฑุถ ุงูุงูุชุฑุงุถู"
        return 1
    fi
}

# ุจุฏุก ุจูุฆุฉ ุณุทุญ ุงูููุชุจ
start_desktop() {
    print_status "ุจุฏุก ุชุดุบูู ุจูุฆุฉ ุณุทุญ ุงูููุชุจ..."
    
    export DISPLAY=:$DISPLAY_NUM
    export USER=$(whoami)
    export HOME=$HOME
    
    # ุจุฏุก ุฎุฏูุฉ dbus
    if command -v dbus-launch >/dev/null 2>&1; then
        eval $(dbus-launch --sh-syntax) &>/dev/null
    fi
    
    # ุจุฏุก ุจูุฆุฉ LXDE
    if command -v lxsession >/dev/null 2>&1; then
        lxsession -s LXDE &
        print_success "ุชู ุจุฏุก ุจูุฆุฉ LXDE"
    elif command -v startlxde >/dev/null 2>&1; then
        startlxde &
        print_success "ุชู ุจุฏุก ุจูุฆุฉ LXDE"
    else
        print_warning "ุจูุฆุฉ LXDE ุบูุฑ ูุซุจุชุฉุ ุณูุชู ุจุฏุก xterm ููุท"
        xterm &
    fi
    
    sleep 3
}

# ุจุฏุก ุงููุชุตูุญุงุช
start_browsers() {
    print_status "ุจุฏุก ุชุดุบูู ุงููุชุตูุญุงุช..."
    
    export DISPLAY=:$DISPLAY_NUM
    
    # ูุญุงููุฉ ุจุฏุก Firefox
    if command -v firefox >/dev/null 2>&1; then
        firefox --new-instance --no-remote &
        print_success "ุชู ุจุฏุก Firefox"
    elif command -v firefox-esr >/dev/null 2>&1; then
        firefox-esr --new-instance --no-remote &
        print_success "ุชู ุจุฏุก Firefox ESR"
    fi
    
    sleep 2
    
    # ุจุฏุก ูุญุทุฉ ุทุฑููุฉ
    if command -v lxterminal >/dev/null 2>&1; then
        lxterminal &
    elif command -v xterm >/dev/null 2>&1; then
        xterm &
    fi
}

# ุจุฏุก ุฎุงุฏู VNC
start_vnc_server() {
    print_status "ุจุฏุก ุชุดุบูู ุฎุงุฏู VNC..."
    
    export DISPLAY=:$DISPLAY_NUM
    
    # ุฅููุงู ุฃู ุฎูุงุฏู VNC ุณุงุจูุฉ
    pkill -f "x11vnc.*:$DISPLAY_NUM" 2>/dev/null || true
    
    # ุจูุงุก ุฃูุฑ VNC
    VNC_CMD="x11vnc -display :$DISPLAY_NUM -rfbport $VNC_PORT -forever -shared -xrandr resize"
    
    # ุฅุถุงูุฉ ูููุฉ ุงููุฑูุฑ ุฅุฐุง ูุงูุช ูุชููุฑุฉ
    if [[ -f ~/.vnc/passwd ]]; then
        VNC_CMD="$VNC_CMD -rfbauth ~/.vnc/passwd"
        print_status "ุงุณุชุฎุฏุงู ูููุฉ ูุฑูุฑ VNC ูู ~/.vnc/passwd"
    else
        VNC_CMD="$VNC_CMD -nopw"
        print_warning "ุชุดุบูู VNC ุจุฏูู ูููุฉ ูุฑูุฑ"
    fi
    
    # ุจุฏุก ุฎุงุฏู VNC
    $VNC_CMD &
    VNC_PID=$!
    
    # ุงูุชุธุงุฑ ุจุฏุก ุงูุฎุงุฏู
    sleep 3
    
    if kill -0 $VNC_PID 2>/dev/null; then
        print_success "ุชู ุจุฏุก ุฎุงุฏู VNC ุนูู ุงููููุฐ $VNC_PORT (PID: $VNC_PID)"
        return 0
    else
        print_error "ูุดู ูู ุจุฏุก ุฎุงุฏู VNC"
        return 1
    fi
}

# ูุญุต ุงูููุงูุฐ
check_ports() {
    print_status "ูุญุต ุงูููุงูุฐ ุงููุชุงุญุฉ..."
    
    if command -v netstat >/dev/null 2>&1; then
        netstat -tlnp | grep :$VNC_PORT && print_success "ุงููููุฐ $VNC_PORT ูุชุงุญ" || print_warning "ุงููููุฐ $VNC_PORT ุบูุฑ ูุชุงุญ"
    elif command -v ss >/dev/null 2>&1; then
        ss -tlnp | grep :$VNC_PORT && print_success "ุงููููุฐ $VNC_PORT ูุชุงุญ" || print_warning "ุงููููุฐ $VNC_PORT ุบูุฑ ูุชุงุญ"
    fi
}

# ุนุฑุถ ูุนูููุงุช ุงูุงุชุตุงู
show_connection_info() {
    echo
    echo "======================================"
    echo "  ูุนูููุงุช ุงูุงุชุตุงู ุจุณุทุญ ุงูููุชุจ VNC"
    echo "======================================"
    echo
    
    # ุงูุญุตูู ุนูู ุนููุงู IP
    if command -v hostname >/dev/null 2>&1; then
        IP=$(hostname -I | awk '{print $1}' 2>/dev/null)
    fi
    
    if [[ -z "$IP" ]]; then
        IP="localhost"
    fi
    
    echo "๐ฅ๏ธ  ุนููุงู ุงูุฎุงุฏู: $IP:$VNC_PORT"
    echo "๐  ูููุฉ ุงููุฑูุฑ: $VNC_PASSWORD"
    echo "๐ค  ุงููุณุชุฎุฏู: $(whoami)"
    echo "๐บ  ุฏูุฉ ุงูุดุงุดุฉ: $SCREEN_RESOLUTION"
    echo
    echo "ุจุฑุงูุฌ VNC ุงููููุตู ุจูุง:"
    echo "โข VNC Viewer (RealVNC)"
    echo "โข TigerVNC Viewer"
    echo "โข TightVNC Viewer"
    echo
    echo "ููุงุชุตุงู:"
    echo "1. ุงูุชุญ ุจุฑูุงูุฌ VNC Viewer"
    echo "2. ุฃุฏุฎู ุงูุนููุงู: $IP:$VNC_PORT"
    echo "3. ุฃุฏุฎู ูููุฉ ุงููุฑูุฑ: $VNC_PASSWORD"
    echo
    print_success "ุณุทุญ ุงูููุชุจ VNC ุฌุงูุฒ ููุงุณุชุฎุฏุงู!"
}

# ุฅููุงู ุงูุฎุฏูุงุช
cleanup() {
    print_status "ุฅููุงู ุฎุฏูุงุช VNC..."
    pkill -f "x11vnc" 2>/dev/null || true
    pkill -f "Xvfb" 2>/dev/null || true
    print_success "ุชู ุฅููุงู ุงูุฎุฏูุงุช"
    exit 0
}

# ูุนุงูุฌุฉ ุฅุดุงุฑุฉ ุงูุฅููุงู
trap cleanup SIGINT SIGTERM

# ุงูุฏุงูุฉ ุงูุฑุฆูุณูุฉ
main() {
    echo "๐ ุจุฏุก ุชุดุบูู ุณุทุญ ููุชุจ VNC..."
    echo
    
    setup_vnc_dirs
    setup_vnc_password
    
    if start_xvfb; then
        start_desktop
        start_browsers
        if start_vnc_server; then
            check_ports
            show_connection_info
            
            # ุฅุจูุงุก ุงูุณูุฑูุจุช ูุนูู
            print_status "ุงูุถุบุท ุนูู Ctrl+C ูุฅููุงู ุงูุฎุฏูุงุช..."
            while true; do
                sleep 10
            done
        else
            print_error "ูุดู ูู ุจุฏุก ุฎุงุฏู VNC"
            cleanup
        fi
    else
        print_error "ูุดู ูู ุจุฏุก ุฎุงุฏู ุงูุนุฑุถ ุงูุงูุชุฑุงุถู"
        exit 1
    fi
}

# ุชุดุบูู ุงูุฏุงูุฉ ุงูุฑุฆูุณูุฉ
main "$@"